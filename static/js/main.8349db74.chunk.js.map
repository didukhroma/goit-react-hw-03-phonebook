{"version":3,"sources":["Components/Utils/Button/Button.module.css","Components/ContactForm/ContactForm.module.css","Components/App/App.module.css","Components/Utils/Button/Button.jsx","utils/capitalize.js","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","Components/ListItem/ListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","utils/searchName.js","Components/App/App.jsx","index.js","Components/Utils/Input/Input.module.css","Components/ListItem/ListItem.module.css"],"names":["module","exports","Button","type","text","onClick","id","className","styles","button","capitalize","string","charAt","toUpperCase","slice","Input","name","pattern","title","onChange","input","required","ContactForm","state","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","onSubmit","props","genId","this","form","Component","ListItem","contact","item","ContactList","contacts","map","Filter","searchName","array","query","find","el","App","filter","addNewContact","data","alert","prevState","deleteContactById","filterHandler","getCurrentContacts","regExp","RegExp","test","localStorage","getItem","parsedContacts","JSON","parse","prevContacts","nextContacts","setItem","stringify","currentContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8349db74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__qibLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1uUN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3KRJb\"};","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\nconst Button = ({ type = 'button', text = 'Button', onClick, id }) => {\n  const handleClick = () => {\n    onClick(id);\n  };\n\n  return (\n    <button\n      type={type}\n      onClick={onClick ? handleClick : null}\n      className={styles.button}\n    >\n      {text}\n    </button>\n  );\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n};\nexport default Button;\n","const capitalize = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nexport default capitalize;\n","import capitalize from '../../../utils/capitalize';\nimport styles from './Input.module.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({\n  type = 'text',\n  name = 'input',\n  pattern,\n  title = 'input',\n  onChange,\n}) => {\n  const text = capitalize(name);\n  return (\n    <label>\n      <span className={styles.text}>{text}</span>\n      <input\n        className={styles.input}\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        required\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { v4 as genId } from 'uuid';\nimport Button from '../Utils/Button';\nimport Input from '../Utils/Input';\nimport styles from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const {\n      target: { value, name },\n    } = event;\n\n    this.setState(() => ({\n      [name]: value,\n    }));\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n\n    const id = genId();\n    const newContact = { id, name, number };\n\n    onSubmit(newContact);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={this.handleChange}\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={this.handleChange}\n        />\n        <Button type=\"submit\" text=\"Add contact\" />\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import Button from '../Utils/Button';\nimport styles from './ListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ListItem = ({ contact: { name, number, id }, onClick }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.text}>\n        {name} : {number}\n      </span>\n      <Button text=\"Delete\" onClick={onClick} id={id} />\n    </li>\n  );\n};\nListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  onClick: PropTypes.func,\n};\nexport default ListItem;\n","import ListItem from '../ListItem/ListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onClick }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ListItem key={contact.id} contact={contact} onClick={onClick} />\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onClick: PropTypes.func,\n};\nexport default ContactList;\n","import Input from '../Utils/Input';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onChange }) => {\n  return <Input type=\"text\" name=\"find contacts by name\" onChange={onChange} />;\n};\nFilter.propTypes = {\n  onChange: PropTypes.func,\n};\nexport default Filter;\n","const searchName = (array, query) => array.find(el => el.name === query);\nexport default searchName;\n","import { Component } from 'react';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport searchName from '../../utils/searchName';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addNewContact = data => {\n    const { name } = data;\n    const { contacts } = this.state;\n    const isFind = searchName(contacts, name);\n\n    if (isFind) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, data],\n    }));\n  };\n\n  deleteContactById = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  filterHandler = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState(() => ({\n      filter: value,\n    }));\n  };\n\n  getCurrentContacts = () => {\n    const { filter, contacts } = this.state;\n    const regExp = new RegExp(filter, 'gi');\n\n    if (filter) {\n      return contacts.filter(contact => regExp.test(contact.name));\n    }\n\n    return contacts;\n  };\n\n  render() {\n    const currentContacts = this.getCurrentContacts();\n    return (\n      <div className={styles.app}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter onChange={this.filterHandler} />\n        <ContactList\n          contacts={currentContacts}\n          onClick={this.deleteContactById}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Input_text__N-fZs\",\"input\":\"Input_input__2Yr6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListItem_item__FRL2K\",\"text\":\"ListItem_text__z5S1h\"};"],"sourceRoot":""}